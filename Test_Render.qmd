---
title: "Test Render"
author: "Corey Scholes"
affiliation: "EBM Analytics"
version: 1.0
date: "2025-Sep-08"
date-modified: "2025-Oct-10"
type: website
execute: 
  echo: true
  warning: false
  message: false
format:
  html:
    theme: cosmo
    embed-resources: true
    toc: true
    number-sections: true
    code-fold: true
  docx:
    toc: true
    fig-align: center
    fig_caption: yes
    df-print: kable
  pdf:
    toc: true
    colorlinks: true
    fig_caption: yes
    keep-tex: false
    include-in-header:
      text: |
        \usepackage{bookmark}
    geometry:
    - margin = 15mm
    df-print: kable
    fig-pos: 'H'
---

# Load Packages

```{r}
#| label: Load packages

 if(!require("pacman")) install.packages("pacman")
pacman::p_load(
  "gtsummary",
  "flextable",
  "epoxy",
  "renv",
  "knitr",
  "rsconnect",
  "quarto",
  "tibble",
  "gargle",
  "googledrive",
  "googlesheets4",
  "tidyverse",
  install = TRUE,
  update = FALSE
)

```

## Authorisations

Pre-authorise access to registry datasets.

```{r}
#| label: Authorisations
#| echo: true

options(
  gargle_oauth_cache = ".secrets",
  gargle_oauth_email = TRUE
)

drive_auth(cache = ".secrets", email = TRUE)

```

# Create Test Data

Function first

```{r}

create_test <- function(n_rows = 50, seed = NULL) {
  if (!is.null(seed)) {
    set.seed(seed)
  }
  
  tibble(
    id = 1:n_rows,
    name = sample(c("Alice", "Bob", "Charlie", "Diana", "Eve", "Frank", "Grace", "Henry"), n_rows, replace = TRUE),
    age = sample(18:65, n_rows, replace = TRUE),
    score = round(runif(n_rows, min = 0, max = 100), 1),
    category = sample(c("A", "B", "C", "D"), n_rows, replace = TRUE) |> factor(),
    date = seq(as.Date("2024-01-01"), by = "day", length.out = n_rows),
    is_active = sample(c(TRUE, FALSE), n_rows, replace = TRUE),
    salary = round(rnorm(n_rows, mean = 60000, sd = 15000), 2),
    department = sample(c("Sales", "Marketing", "IT", "HR", "Finance"), n_rows, replace = TRUE),
    rating = sample(1:5, n_rows, replace = TRUE) |> ordered()
  )
}

```

Function call

```{r}


TestDF <- create_test(seed = 2068)

```

# Write externally

<!--# Write reoperations to external sheet -->

Write reoperations to external table

```{r}

SheetID <- "https://docs.google.com/spreadsheets/d/1e7431oSrK9tItiSZb4wCWPI7nqGqawH8pNgnqgHPNkU/view"

```

```{r}
#| label:  Report-Write
#| eval: true
#| include: true

# Authenticate for sheets using the same token
gs4_auth(token = drive_token())

# Do the write operation silently
if (nrow(TestDF) > 0) {
  invisible(
    googlesheets4::range_write(
 ss = SheetID,
 data = TestDF,
 sheet = "TestTab",
 range = "A1:J",
 col_names = TRUE
    )
  )
}


```

```{r}
#| label:  Report-display

if (nrow(TestDF) == 0) {
  epoxy::epoxy_html("There are no reoperations to report.")
} else {
  epoxy::epoxy_html('Reoperations were written to an <a href="{{SheetID}}">external file</a> for further review')
}


```



# Table layout

Test table layout across docx and pdf formats

```{r}
#| label: tbl-rep1RC1pat
#| tbl-cap: "Summary of PRULO Report 1 (Rotator Cuff) Case - Patient Characteristics"

#Dont insert chunk names into table chunks - quarto bug makes it wig out when there is a named chunk for some reason

TableRep1RC1 <- TestDF |>
  dplyr::select(
    id,
    name,
    age,
    score,
    category,
    date,
    is_active,
    salary,
    department,
    rating
    ) |>
    tbl_summary(
      by = "department"
    #   label = list(
    #     #SurgeonA ~ "Surgeon",
    #     AgeAtInitialExam ~ "Age at Initial Consultation (Years)",
    #     Sex = "Male",
    #     BilateralStatus ~ "Bilateral Presentation",
    #     IndexSide ~ "Dominant Side",
    #     SymptomDuration ~ "Symptom Duration (Weeks)",
    #     SymptomDurationCat ~ "Symptom Duration Category",
    #     TreatmentStatus ~ "Treatment Record Active",
    #     RegistryStatus ~ "Patient Record Active"
    #   ),
    #   type = list(
    #     AgeAtInitialExam ~ "continuous",
    #     SymptomDuration ~ "continuous",
    #     Sex ~ "dichotomous",
    #     TreatmentStatus ~ "dichotomous",
    #     RegistryStatus ~ "dichotomous"
    #   ),
    #   value = list(
    #     Sex = "Male",
    #     IndexSide = "Dominant",
    #     TreatmentStatus = "Ongoing",
    #     RegistryStatus = "Open"
    #   ),
    #   statistic = list(
    #     all_categorical() ~ "{p} ({n})"
    #     ),
    #   missing = "no"
    ) |> gtsummary::add_stat_label(
    location = "column"
  # ) |> add_overall() |> modify_table_styling(
  #     columns = label,
  #     rows = label == "Symptom Duration Category",
  #     footnote = "Dichotomised below or equal to 0.5 years or greater than 0.5 years"
  # ) |> modify_table_styling(
  #     columns = label,
  #     rows = label == "Treatment Record Active",
  #     footnote = "Treatment record remains active - no change to follow up"
  # ) |> modify_table_styling(
  #     columns = label,
  #     rows = label == "Patient Record Active",
  #     footnote = "Patient record remains open - no change to consent or mortality status"
  )

gtsummary::as_flex_table(TableRep1RC1) |> flextable::set_table_properties(
  layout = "autofit",
  width = 1,
  align = "center",
  opts_word = list(
    split = TRUE,
    repeat_headers = TRUE
    )
) |> flextable::fontsize(size = 11, part = "header") |>
  flextable::fontsize(size = 10, part = "body") |>
  flextable::fit_to_width(max_width = 7)

```